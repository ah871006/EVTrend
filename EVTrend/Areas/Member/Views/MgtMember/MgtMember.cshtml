@using EVTrend.Areas.Member.Models
@{
    ViewData["Title"] = "使用者管理";
}
@{
    IEnumerable<MemberModels> member = ViewData["Member"] as IEnumerable<MemberModels>;
}
<html>
<head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.2/knockout-min.js"></script>
</head>
<body>
    <h1>@ViewData["Title"]</h1>
    <br>
    <div class="container" id="MgtMember">
        <div class="row">
            <table class="table" style="text-align:center;">
                <thead>
                    <tr>
                        <th scope="col">帳號</th>
                        <th scope="col">暱稱</th>
                        <th scope="col">性別</th>
                        <th scope="col">生日</th>
                        <th scope="col">系統權限</th>
                        <th scope="col">執行動作</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (MemberModels item in member)
                    {
                        <tr>
                            <!-- ko ifnot: IsEdit() && Item() == @item.MemberNo -->
                            <td class="align-middle">@item.Account</td>
                            <td class="align-middle">@item.Username</td>
                            <td class="align-middle">
                                <!-- ko if: @item.Gender == 1 -->
                                <span>男</span>
                                <!-- /ko -->
                                <!-- ko if: @item.Gender== 2 -->
                                <span>女</span>
                                <!-- /ko -->
                                <!-- ko if: @item.Gender == 3 -->
                                <span>不願透露</span>
                                <!-- /ko -->
                            </td>
                            <td class="align-middle">@item.Birthday.Value.ToString("D", new System.Globalization.CultureInfo("zh-TW"))</td>
                            <td class="align-middle">@item.StatusName</td>
                            <td class="align-middle">
                                <!-- ko if: IsClickEdit() && Item() != @item.MemberNo -->
                                <button type="button" class="btn btn-primary" disabled="disabled">修改</button>
                                <span>&nbsp;&nbsp;</span>
                                <button type="button" class="btn btn-danger" disabled="disabled">刪除</button>
                                <!-- /ko -->
                                <!-- ko ifnot: IsClickEdit() -->
                                <button type="button" class="btn btn-primary" id="Edit" onclick="editMember('@item.MemberNo')">修改</button>
                                <span>&nbsp;&nbsp;</span>
                                <button type="button" class="btn btn-danger" onclick="deleteMember('@item.MemberNo')">刪除</button>
                                <!-- /ko -->
                            </td>
                            <!-- /ko -->
                        </tr>
                        <tr>
                            <!-- ko if: IsEdit() && Item() == @item.MemberNo -->
                            <td class="align-middle" id="Account">@item.Account</td>
                            <td class="align-middle">
                                <input type="text" class="form-control" id="Username" name="Username" value="@item.Username">
                            </td>
                            <td class="align-middle">
                                <select class="form-control" id=Gender name="Gender">
                                    <!-- ko if: @item.Gender == 1 -->
                                    <option value=@item.Gender style="display: none">男</option>
                                    <!-- /ko -->
                                    <!-- ko if: @item.Gender == 2 -->
                                    <option value=@item.Gender style="display: none">女</option>
                                    <!-- /ko -->
                                    <!-- ko if: @item.Gender == 3 -->
                                    <option value=@item.Gender style="display: none">不願透露</option>
                                    <!-- /ko -->
                                    <option value="1">男</option>
                                    <option value="2">女</option>
                                    <option value="3">不願透漏</option>
                                </select>
                            </td>
                            <td class="align-middle">
                                <input type="date" class="form-control" name="Birthday" id="Birthday" value="@item.Birthday.Value.ToString("yyyy-MM-dd")">
                            </td>
                            <td class="align-middle">
                                <select class="form-control" name="StatusNo" id="StatusNo">
                                    @{ List<StatusModels> status = (List<StatusModels>)ViewData["Status"];
                                        <option value=@item.StatusNo style="display:none">@item.StatusName</option>
                                        foreach (var s in status)
                                        {
                                            <option value=@s.StatusNo>@s.StatusName</option>
                                        }
                                    }
                                </select>
                            </td>
                            <td class="align-middle">
                                <button type="button" class="btn btn-success" onclick="saveMember(@item.MemberNo, 'Account', 'Username', 'Gender', 'Birthday', 'StatusNo')">確認</button>
                                <span>&nbsp;&nbsp;</span>
                                <button type="button" class="btn btn-secondary" onclick="cancel(@item.MemberNo)">取消</button>
                            </td>
                            <!-- /ko -->
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</body>
</html>
<script type="text/javascript">
    this.IsEdit = ko.observable(false);
    this.IsClickEdit = ko.observable(false);
    this.Item = ko.observable(0);
    ko.applyBindings($("#MgtMember").get(0));

    //修改
    function editMember(data) {
        this.IsEdit(true);
        this.IsClickEdit(true);
        this.Item(data);

        var Username = document.getElementById("Username");
        Username.focus();
    }

    //取消修改
    function cancel(data) {
        this.IsEdit(false);
        this.IsClickEdit(false);
        this.Item(data);
    }

    //儲存
    function saveMember(data, Account, Username, Gender, Birthday, StatusNo) {
        var account = document.getElementById(Account).value;
        var username = document.getElementById(Username).value;
        var gender = document.getElementById(Gender).value;
        var birthday = document.getElementById(Birthday).value;
        var statusNo = document.getElementById(StatusNo).value;
        var today = new Date().toISOString().substring(0, 10); 

        if (username.length == 0 || username.length > 20 || username == account) {
            alert("暱稱不可與帳號相同且要在20字內");
            document.getElementById(Username).focus();
            return false;
        }

        if (birthday < "1970-01-01" || birthday > today) {
            alert("生日不得小於1970或大於今日");
            document.getElementById(Birthday).focus();
            return false;
        }

        this.IsEdit(false);
        this.IsClickEdit(false);
        this.Item(data);

        let args = {
            MemberNo: data,
            Username: username,
            Gender: gender,
            Birthday: birthday,
            StatusNo: statusNo
        };

        //Ajax
        $.ajax({
            url: '@Url.Action("UpdateMember")',
            data: args,
            method: "POST",
            async: true,
            success: function (response) {
                if (response) {
                    alert("修改成功")
                    window.location.reload();
                } else {
                    alert("修改失敗，可能原因：權限不足")
                }
            },
            error: function (e) {
                console.log(e);
            }
        });
    }

    //刪除
    function deleteMember(data) {
        //視窗提示
        if (window.confirm("是否確定要刪除?")) {
            this.Item(data);

            let args = {
                MemberNo: data
            };

            //Ajax
            $.ajax({
                url: '@Url.Action("DeleteMember")',
                data: args,
                method: "POST",
                async: true,
                success: function (response) {
                    if (response) {
                        alert("刪除成功")
                        window.location.reload();
                    } else {
                        alert("刪除失敗，可能原因：權限不足")
                    }
                },
                error: function (e) {
                    console.log(e);
                }
            });
        }
    }
</script>